{"version":3,"sources":["components/Header/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance/Balance.js","components/Expenses/IncomeExpenses.js","components/Transcation/Transcation.js","components/TranscationList/TransactionList.js","components/AddTranscation/AddTranscation.js","App.js","index.js"],"names":["Header","state","action","type","transcations","filter","transcation","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTranscation","addTranscation","Balance","amount","useContext","map","amt","console","log","total","reduce","acc","curr","toFixed","IncomeExpenses","amountPlus","num","amountMinus","className","Math","abs","Transcation","sign","text","onClick","TransactionList","context","AddTranscation","useState","setText","setAmount","onSubmit","e","preventDefault","newTranscation","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fee0b95.chunk.js","sourcesContent":["import './header.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h3>\r\n            Expense Tracker\r\n        </h3>\r\n    )\r\n}\r\n\r\nexport default Header","export default (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSCATION':\r\n            return {\r\n                ...state, //send the current state\r\n                //change the transaction value ~ fitler out the transcation that we want\r\n                transcations: state.transcations.filter( (transcation) => (transcation.id !== action.payload))\r\n            }\r\n        case 'ADD_TRANSCATION':\r\n            return{\r\n                ...state,//keep the current states\r\n                transcations: [action.payload , ...state.transcations] //spread operator to keep current states then add the new transcation\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial State\r\nconst initialState = {\r\n    transcations: []\r\n   \r\n}\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    //Actions\r\n    function deleteTranscation(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSCATION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTranscation(transcation){\r\n        dispatch({\r\n            type: 'ADD_TRANSCATION',\r\n            payload: transcation\r\n        });\r\n    }\r\n    \r\n    return(<GlobalContext.Provider value={{\r\n        transcations: state.transcations, \r\n        deleteTranscation,\r\n        addTranscation\r\n        }} >\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React from 'react'\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\n\r\nconst Balance = () => {\r\n    const context = useContext(GlobalContext);\r\n\r\n    const amount = context.transcations.map( (amt) => amt.amount)\r\n    console.log(amount)\r\n\r\n \r\n    const total = amount.reduce( (acc, curr) => acc += curr, 0 ).toFixed(2)\r\n    \r\n    // let total = 0;\r\n    // for(let i = 0; i < amount.length;i++){\r\n    //     total += amount[i];\r\n    // }\r\n\r\n\r\n    console.log(total)\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import './expenses.css'\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n    const context = useContext(GlobalContext)\r\n \r\n    const amount = context.transcations.map( (amt) => (amt.amount))\r\n   \r\n    const amountPlus = amount\r\n        .filter((num) => (num > 0))\r\n        .reduce((acc, curr) => (acc + curr), 0)\r\n        .toFixed(2)\r\n\r\n    const amountMinus = amount\r\n        .filter((num) => (num < 0))\r\n        .reduce((acc, curr) => (acc + curr), 0)\r\n\r\n    console.log(amountPlus)\r\n\r\n    return (\r\n       <div className=\"inc-exp-container\">\r\n           <div>\r\n               <h4>Income</h4>\r\n               <p id=\"money-plus\" className=\"money plus\">+${amountPlus}</p>\r\n           </div>\r\n           <div>\r\n           <h4>Expense</h4>\r\n               <p id=\"money-minus\" className=\"money minus\">-${Math.abs(amountMinus).toFixed(2)}</p>\r\n           </div>\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import { useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\n\r\n\r\nconst Transcation = ({transcation}) => {\r\n\r\n    const { deleteTranscation } = useContext(GlobalContext);\r\n    const context = useContext(GlobalContext);\r\n\r\n    const sign = transcation.amount > 0 ? '+' : '-'\r\n    return (\r\n        <li className={transcation.amount > 0 ? 'plus' : 'minus'}>\r\n            {transcation.text} <span>{sign}${Math.abs(transcation.amount)}</span><button onClick={ () => deleteTranscation(transcation.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transcation\r\n","import './transcation.css'\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport Transcation from '../Transcation/Transcation'\r\n\r\n\r\nconst TransactionList = () => {\r\n    const context = useContext(GlobalContext);\r\n\r\n    //console.log(context);\r\n    console.log(context.transcations);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul id=\"list\" className=\"list\">\r\n                {context.transcations.map((transcation) => (<Transcation key={transcation.id} transcation={transcation} />))}\r\n                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import './addtranscation.css'\r\nimport { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\n\r\nconst AddTranscation = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTranscation } = useContext(GlobalContext)\r\n\r\n    function onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newTranscation ={\r\n            id : Math.floor(Math.random() * 10000000),\r\n            text: text,\r\n            amount: parseInt(amount)\r\n        }\r\n\r\n        addTranscation(newTranscation)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transcation</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Enter Transcation</label>\r\n                    <input type=\"text\" value={text} onChange={ (e) => setText(e.target.value)} placeholder=\"E.g - Income\"/>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount<br/> (negative - expense, positive - income) </label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter Amount..\"/>\r\n                </div>\r\n\r\n                <button className=\"btn\">Add Transcation</button>\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTranscation\r\n\r\n","import './App.css';\nimport Header from './components/Header/Header'\nimport Balance from './components/Balance/Balance'\nimport IncomeExpenses from './components/Expenses/IncomeExpenses'\nimport TranscationList from './components/TranscationList/TransactionList'\nimport AddTranscation from './components/AddTranscation/AddTranscation'\n\nimport {GlobalProvider} from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpenses />\n          <TranscationList />\n          <AddTranscation />\n        </div>     \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}